{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM2WxDOyyt8SjSZD8HFDyPY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"O3i36PrrYHkj","executionInfo":{"status":"ok","timestamp":1734633083190,"user_tz":360,"elapsed":3698,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"outputs":[],"source":["import pandas as pd\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","import numpy as np\n","%matplotlib inline\n"]},{"cell_type":"code","source":["df = pd.read_csv(\"/content/WA_Fn-UseC_-Telco-Customer-Churn.csv\")"],"metadata":{"id":"ocMODtJwZ3Rw","executionInfo":{"status":"ok","timestamp":1734633083193,"user_tz":360,"elapsed":44,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"hJGOuUYAZ8S3","executionInfo":{"status":"ok","timestamp":1734633083193,"user_tz":360,"elapsed":42,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"44a6640b-ffb3-4b72-9ede-0a97938d82c5"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   customerID  gender  SeniorCitizen Partner Dependents  tenure PhoneService  \\\n","0  7590-VHVEG  Female              0     Yes         No       1           No   \n","1  5575-GNVDE    Male              0      No         No      34          Yes   \n","2  3668-QPYBK    Male              0      No         No       2          Yes   \n","3  7795-CFOCW    Male              0      No         No      45           No   \n","4  9237-HQITU  Female              0      No         No       2          Yes   \n","\n","      MultipleLines InternetService OnlineSecurity  ... DeviceProtection  \\\n","0  No phone service             DSL             No  ...               No   \n","1                No             DSL            Yes  ...              Yes   \n","2                No             DSL            Yes  ...               No   \n","3  No phone service             DSL            Yes  ...              Yes   \n","4                No     Fiber optic             No  ...               No   \n","\n","  TechSupport StreamingTV StreamingMovies        Contract PaperlessBilling  \\\n","0          No          No              No  Month-to-month              Yes   \n","1          No          No              No        One year               No   \n","2          No          No              No  Month-to-month              Yes   \n","3         Yes          No              No        One year               No   \n","4          No          No              No  Month-to-month              Yes   \n","\n","               PaymentMethod MonthlyCharges  TotalCharges Churn  \n","0           Electronic check          29.85         29.85    No  \n","1               Mailed check          56.95        1889.5    No  \n","2               Mailed check          53.85        108.15   Yes  \n","3  Bank transfer (automatic)          42.30       1840.75    No  \n","4           Electronic check          70.70        151.65   Yes  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-202cd819-c736-45f7-afb6-73b559cb7de3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customerID</th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>...</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7590-VHVEG</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>29.85</td>\n","      <td>29.85</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5575-GNVDE</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>34</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>56.95</td>\n","      <td>1889.5</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3668-QPYBK</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>53.85</td>\n","      <td>108.15</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7795-CFOCW</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>45</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>42.30</td>\n","      <td>1840.75</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9237-HQITU</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>70.70</td>\n","      <td>151.65</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-202cd819-c736-45f7-afb6-73b559cb7de3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-202cd819-c736-45f7-afb6-73b559cb7de3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-202cd819-c736-45f7-afb6-73b559cb7de3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-54f713b1-becf-4e15-9f69-4795418e2b2e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-54f713b1-becf-4e15-9f69-4795418e2b2e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-54f713b1-becf-4e15-9f69-4795418e2b2e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"id":"iPHwMHMQZ9on","colab":{"base_uri":"https://localhost:8080/","height":742},"executionInfo":{"status":"ok","timestamp":1734633083194,"user_tz":360,"elapsed":38,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"12f53a22-8094-44cd-a836-65307ed8dd9d"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["customerID           object\n","gender               object\n","SeniorCitizen         int64\n","Partner              object\n","Dependents           object\n","tenure                int64\n","PhoneService         object\n","MultipleLines        object\n","InternetService      object\n","OnlineSecurity       object\n","OnlineBackup         object\n","DeviceProtection     object\n","TechSupport          object\n","StreamingTV          object\n","StreamingMovies      object\n","Contract             object\n","PaperlessBilling     object\n","PaymentMethod        object\n","MonthlyCharges      float64\n","TotalCharges         object\n","Churn                object\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>customerID</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>SeniorCitizen</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Partner</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Dependents</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>tenure</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>PhoneService</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>MultipleLines</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>InternetService</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>OnlineSecurity</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>OnlineBackup</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>DeviceProtection</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>TechSupport</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>StreamingTV</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>StreamingMovies</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Contract</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>PaperlessBilling</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>PaymentMethod</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>MonthlyCharges</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>TotalCharges</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.TotalCharges.values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ETq6zcuLIn2x","executionInfo":{"status":"ok","timestamp":1734633083194,"user_tz":360,"elapsed":35,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"aec0b0d6-6126-4018-e8b7-7df9d57fcaab"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['29.85', '1889.5', '108.15', ..., '346.45', '306.6', '6844.5'],\n","      dtype=object)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["pd.to_numeric(df.TotalCharges,errors = \"coerce\").isnull() # ERRORS WILL IGNORE THE NULL VALUES IN THIS COLUMN"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"dNnMzCG9JStd","executionInfo":{"status":"ok","timestamp":1734633083194,"user_tz":360,"elapsed":28,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"3ce2ac63-c4ac-4689-af86-68a85de5fe41"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       False\n","1       False\n","2       False\n","3       False\n","4       False\n","        ...  \n","7038    False\n","7039    False\n","7040    False\n","7041    False\n","7042    False\n","Name: TotalCharges, Length: 7043, dtype: bool"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TotalCharges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7038</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7039</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7040</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7041</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7042</th>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7043 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> bool</label>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df[pd.to_numeric(df.TotalCharges,errors = \"coerce\").isnull()] # THIS SHOWS WHAT ARE THE VALUES HAVE TRUE VALUES"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":634},"id":"jZBht3meKRu-","executionInfo":{"status":"ok","timestamp":1734633083195,"user_tz":360,"elapsed":26,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"b3ddad05-52c8-4041-cae4-754341aa6b83"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      customerID  gender  SeniorCitizen Partner Dependents  tenure  \\\n","488   4472-LVYGI  Female              0     Yes        Yes       0   \n","753   3115-CZMZD    Male              0      No        Yes       0   \n","936   5709-LVOEQ  Female              0     Yes        Yes       0   \n","1082  4367-NUYAO    Male              0     Yes        Yes       0   \n","1340  1371-DWPAZ  Female              0     Yes        Yes       0   \n","3331  7644-OMVMY    Male              0     Yes        Yes       0   \n","3826  3213-VVOLG    Male              0     Yes        Yes       0   \n","4380  2520-SGTTA  Female              0     Yes        Yes       0   \n","5218  2923-ARZLG    Male              0     Yes        Yes       0   \n","6670  4075-WKNIU  Female              0     Yes        Yes       0   \n","6754  2775-SEFEE    Male              0      No        Yes       0   \n","\n","     PhoneService     MultipleLines InternetService       OnlineSecurity  ...  \\\n","488            No  No phone service             DSL                  Yes  ...   \n","753           Yes                No              No  No internet service  ...   \n","936           Yes                No             DSL                  Yes  ...   \n","1082          Yes               Yes              No  No internet service  ...   \n","1340           No  No phone service             DSL                  Yes  ...   \n","3331          Yes                No              No  No internet service  ...   \n","3826          Yes               Yes              No  No internet service  ...   \n","4380          Yes                No              No  No internet service  ...   \n","5218          Yes                No              No  No internet service  ...   \n","6670          Yes               Yes             DSL                   No  ...   \n","6754          Yes               Yes             DSL                  Yes  ...   \n","\n","         DeviceProtection          TechSupport          StreamingTV  \\\n","488                   Yes                  Yes                  Yes   \n","753   No internet service  No internet service  No internet service   \n","936                   Yes                   No                  Yes   \n","1082  No internet service  No internet service  No internet service   \n","1340                  Yes                  Yes                  Yes   \n","3331  No internet service  No internet service  No internet service   \n","3826  No internet service  No internet service  No internet service   \n","4380  No internet service  No internet service  No internet service   \n","5218  No internet service  No internet service  No internet service   \n","6670                  Yes                  Yes                  Yes   \n","6754                   No                  Yes                   No   \n","\n","          StreamingMovies  Contract PaperlessBilling  \\\n","488                    No  Two year              Yes   \n","753   No internet service  Two year               No   \n","936                   Yes  Two year               No   \n","1082  No internet service  Two year               No   \n","1340                   No  Two year               No   \n","3331  No internet service  Two year               No   \n","3826  No internet service  Two year               No   \n","4380  No internet service  Two year               No   \n","5218  No internet service  One year              Yes   \n","6670                   No  Two year               No   \n","6754                   No  Two year              Yes   \n","\n","                  PaymentMethod MonthlyCharges  TotalCharges Churn  \n","488   Bank transfer (automatic)          52.55                  No  \n","753                Mailed check          20.25                  No  \n","936                Mailed check          80.85                  No  \n","1082               Mailed check          25.75                  No  \n","1340    Credit card (automatic)          56.05                  No  \n","3331               Mailed check          19.85                  No  \n","3826               Mailed check          25.35                  No  \n","4380               Mailed check          20.00                  No  \n","5218               Mailed check          19.70                  No  \n","6670               Mailed check          73.35                  No  \n","6754  Bank transfer (automatic)          61.90                  No  \n","\n","[11 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-2876386f-be09-49ba-b87c-6fcc86a0337c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customerID</th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>...</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>488</th>\n","      <td>4472-LVYGI</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Two year</td>\n","      <td>Yes</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>52.55</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>753</th>\n","      <td>3115-CZMZD</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>...</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>Two year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>20.25</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>936</th>\n","      <td>5709-LVOEQ</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Two year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>80.85</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1082</th>\n","      <td>4367-NUYAO</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>...</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>Two year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>25.75</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1340</th>\n","      <td>1371-DWPAZ</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Two year</td>\n","      <td>No</td>\n","      <td>Credit card (automatic)</td>\n","      <td>56.05</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3331</th>\n","      <td>7644-OMVMY</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>...</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>Two year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>19.85</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3826</th>\n","      <td>3213-VVOLG</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>...</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>Two year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>25.35</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4380</th>\n","      <td>2520-SGTTA</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>...</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>Two year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>20.00</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>5218</th>\n","      <td>2923-ARZLG</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>...</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>One year</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>19.70</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>6670</th>\n","      <td>4075-WKNIU</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Two year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>73.35</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>6754</th>\n","      <td>2775-SEFEE</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Two year</td>\n","      <td>Yes</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>61.90</td>\n","      <td></td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>11 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2876386f-be09-49ba-b87c-6fcc86a0337c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2876386f-be09-49ba-b87c-6fcc86a0337c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2876386f-be09-49ba-b87c-6fcc86a0337c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-48625fc8-4be7-454a-91a2-11021662cea6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48625fc8-4be7-454a-91a2-11021662cea6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-48625fc8-4be7-454a-91a2-11021662cea6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df1 = df[df.TotalCharges != ' ']\n","df1.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HU4bt5ePKwKZ","executionInfo":{"status":"ok","timestamp":1734633083394,"user_tz":360,"elapsed":222,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"9435cea3-88a4-4be1-8bc4-c5d737a50741"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7032, 21)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df1.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":742},"id":"_bTuMxahLqdI","executionInfo":{"status":"ok","timestamp":1734633083395,"user_tz":360,"elapsed":37,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"18f09546-02b1-47ff-c5d1-0c1b585c4873"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["customerID           object\n","gender               object\n","SeniorCitizen         int64\n","Partner              object\n","Dependents           object\n","tenure                int64\n","PhoneService         object\n","MultipleLines        object\n","InternetService      object\n","OnlineSecurity       object\n","OnlineBackup         object\n","DeviceProtection     object\n","TechSupport          object\n","StreamingTV          object\n","StreamingMovies      object\n","Contract             object\n","PaperlessBilling     object\n","PaymentMethod        object\n","MonthlyCharges      float64\n","TotalCharges         object\n","Churn                object\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>customerID</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>SeniorCitizen</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Partner</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Dependents</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>tenure</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>PhoneService</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>MultipleLines</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>InternetService</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>OnlineSecurity</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>OnlineBackup</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>DeviceProtection</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>TechSupport</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>StreamingTV</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>StreamingMovies</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Contract</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>PaperlessBilling</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>PaymentMethod</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>MonthlyCharges</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>TotalCharges</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["pd.to_numeric(df1.TotalCharges)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"waj9SnbkMML0","executionInfo":{"status":"ok","timestamp":1734633083395,"user_tz":360,"elapsed":35,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"fcc8d298-9640-4288-dabe-b024ac0598d4"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         29.85\n","1       1889.50\n","2        108.15\n","3       1840.75\n","4        151.65\n","         ...   \n","7038    1990.50\n","7039    7362.90\n","7040     346.45\n","7041     306.60\n","7042    6844.50\n","Name: TotalCharges, Length: 7032, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TotalCharges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>29.85</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1889.50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>108.15</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1840.75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>151.65</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7038</th>\n","      <td>1990.50</td>\n","    </tr>\n","    <tr>\n","      <th>7039</th>\n","      <td>7362.90</td>\n","    </tr>\n","    <tr>\n","      <th>7040</th>\n","      <td>346.45</td>\n","    </tr>\n","    <tr>\n","      <th>7041</th>\n","      <td>306.60</td>\n","    </tr>\n","    <tr>\n","      <th>7042</th>\n","      <td>6844.50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7032 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df1.TotalCharges = pd.to_numeric(df1.TotalCharges)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kQWAN8pJMWA0","executionInfo":{"status":"ok","timestamp":1734633083396,"user_tz":360,"elapsed":34,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"eb6ef4b7-23fa-42f1-d0f9-d022b2968bf5"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-11-b67e0c3d31a6>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1.TotalCharges = pd.to_numeric(df1.TotalCharges)\n"]}]},{"cell_type":"code","source":["df1.TotalCharges.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HtSVDIVMMwNX","executionInfo":{"status":"ok","timestamp":1734633083396,"user_tz":360,"elapsed":31,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"d7333b00-5c64-40a9-e020-81d28e929542"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df1[df1.Churn=='No'] # this show the customer with NO chrun(Living or Not living)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"_wKsclUeM6a5","executionInfo":{"status":"ok","timestamp":1734633083396,"user_tz":360,"elapsed":27,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"5abfde7c-11fc-471d-d8ff-47a2a544ba2c"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      customerID  gender  SeniorCitizen Partner Dependents  tenure  \\\n","0     7590-VHVEG  Female              0     Yes         No       1   \n","1     5575-GNVDE    Male              0      No         No      34   \n","3     7795-CFOCW    Male              0      No         No      45   \n","6     1452-KIOVK    Male              0      No        Yes      22   \n","7     6713-OKOMC  Female              0      No         No      10   \n","...          ...     ...            ...     ...        ...     ...   \n","7037  2569-WGERO  Female              0      No         No      72   \n","7038  6840-RESVB    Male              0     Yes        Yes      24   \n","7039  2234-XADUH  Female              0     Yes        Yes      72   \n","7040  4801-JZAZL  Female              0     Yes        Yes      11   \n","7042  3186-AJIEK    Male              0      No         No      66   \n","\n","     PhoneService     MultipleLines InternetService       OnlineSecurity  ...  \\\n","0              No  No phone service             DSL                   No  ...   \n","1             Yes                No             DSL                  Yes  ...   \n","3              No  No phone service             DSL                  Yes  ...   \n","6             Yes               Yes     Fiber optic                   No  ...   \n","7              No  No phone service             DSL                  Yes  ...   \n","...           ...               ...             ...                  ...  ...   \n","7037          Yes                No              No  No internet service  ...   \n","7038          Yes               Yes             DSL                  Yes  ...   \n","7039          Yes               Yes     Fiber optic                   No  ...   \n","7040           No  No phone service             DSL                  Yes  ...   \n","7042          Yes                No     Fiber optic                  Yes  ...   \n","\n","         DeviceProtection          TechSupport          StreamingTV  \\\n","0                      No                   No                   No   \n","1                     Yes                   No                   No   \n","3                     Yes                  Yes                   No   \n","6                      No                   No                  Yes   \n","7                      No                   No                   No   \n","...                   ...                  ...                  ...   \n","7037  No internet service  No internet service  No internet service   \n","7038                  Yes                  Yes                  Yes   \n","7039                  Yes                   No                  Yes   \n","7040                   No                   No                   No   \n","7042                  Yes                  Yes                  Yes   \n","\n","          StreamingMovies        Contract PaperlessBilling  \\\n","0                      No  Month-to-month              Yes   \n","1                      No        One year               No   \n","3                      No        One year               No   \n","6                      No  Month-to-month              Yes   \n","7                      No  Month-to-month               No   \n","...                   ...             ...              ...   \n","7037  No internet service        Two year              Yes   \n","7038                  Yes        One year              Yes   \n","7039                  Yes        One year              Yes   \n","7040                   No  Month-to-month              Yes   \n","7042                  Yes        Two year              Yes   \n","\n","                  PaymentMethod MonthlyCharges  TotalCharges  Churn  \n","0              Electronic check          29.85         29.85     No  \n","1                  Mailed check          56.95       1889.50     No  \n","3     Bank transfer (automatic)          42.30       1840.75     No  \n","6       Credit card (automatic)          89.10       1949.40     No  \n","7                  Mailed check          29.75        301.90     No  \n","...                         ...            ...           ...    ...  \n","7037  Bank transfer (automatic)          21.15       1419.40     No  \n","7038               Mailed check          84.80       1990.50     No  \n","7039    Credit card (automatic)         103.20       7362.90     No  \n","7040           Electronic check          29.60        346.45     No  \n","7042  Bank transfer (automatic)         105.65       6844.50     No  \n","\n","[5163 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-af52cc9b-3047-4984-83cd-eb120d9e04e8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customerID</th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>...</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7590-VHVEG</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>29.85</td>\n","      <td>29.85</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5575-GNVDE</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>34</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>56.95</td>\n","      <td>1889.50</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7795-CFOCW</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>45</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>42.30</td>\n","      <td>1840.75</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1452-KIOVK</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>22</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Credit card (automatic)</td>\n","      <td>89.10</td>\n","      <td>1949.40</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6713-OKOMC</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>10</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>29.75</td>\n","      <td>301.90</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7037</th>\n","      <td>2569-WGERO</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>72</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>...</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>Two year</td>\n","      <td>Yes</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>21.15</td>\n","      <td>1419.40</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>7038</th>\n","      <td>6840-RESVB</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>24</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>One year</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>84.80</td>\n","      <td>1990.50</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>7039</th>\n","      <td>2234-XADUH</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>72</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>One year</td>\n","      <td>Yes</td>\n","      <td>Credit card (automatic)</td>\n","      <td>103.20</td>\n","      <td>7362.90</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>7040</th>\n","      <td>4801-JZAZL</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>11</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>29.60</td>\n","      <td>346.45</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>7042</th>\n","      <td>3186-AJIEK</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>66</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Two year</td>\n","      <td>Yes</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>105.65</td>\n","      <td>6844.50</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5163 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af52cc9b-3047-4984-83cd-eb120d9e04e8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-af52cc9b-3047-4984-83cd-eb120d9e04e8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-af52cc9b-3047-4984-83cd-eb120d9e04e8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-73dacbd8-ca11-4aec-a4aa-f07711793038\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73dacbd8-ca11-4aec-a4aa-f07711793038')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-73dacbd8-ca11-4aec-a4aa-f07711793038 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["tenure_chrun_no = df1[df1.Churn=='No'].tenure\n","tenure_chrun_no"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"iXJQUhfHNd9u","executionInfo":{"status":"ok","timestamp":1734633083396,"user_tz":360,"elapsed":26,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"c098cc36-7298-40b6-e9a7-e4649134b203"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        1\n","1       34\n","3       45\n","6       22\n","7       10\n","        ..\n","7037    72\n","7038    24\n","7039    72\n","7040    11\n","7042    66\n","Name: tenure, Length: 5163, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tenure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7037</th>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>7038</th>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>7039</th>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>7040</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>7042</th>\n","      <td>66</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5163 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["tenure_chrun_yes = df1[df1.Churn=='Yes'].tenure\n","tenure_chrun_yes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"95xngELWODuj","executionInfo":{"status":"ok","timestamp":1734633083396,"user_tz":360,"elapsed":24,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"867c5c13-3367-4856-b464-6858095a2a7e"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2        2\n","4        2\n","5        8\n","8       28\n","13      49\n","        ..\n","7021    12\n","7026     9\n","7032     1\n","7034    67\n","7041     4\n","Name: tenure, Length: 1869, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tenure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7021</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>7026</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>7032</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7034</th>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>7041</th>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1869 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["plt.hist([tenure_chrun_yes,tenure_chrun_no],color = ['green','red'],label = ['Chrun_yes','Chrun_no'])\n","plt.xlabel('Tenure')\n","plt.ylabel('No of customers')\n","plt.title('Chrun Analysis')\n","plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"QX562_tkOQVT","executionInfo":{"status":"ok","timestamp":1734633083951,"user_tz":360,"elapsed":577,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"cfb29b62-4e92-4972-ed1a-3b8d3ac8072d"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7b88fd322380>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mc_chrun_no = df1[df1.Churn == 'No'].MonthlyCharges\n","mc_chrun_yes = df1[df1.Churn == 'Yes'].MonthlyCharges\n","\n","plt.xlabel(\"Monthly Charges\")\n","plt.ylabel(\"No of customers\")\n","plt.title(\"customer chrun prediction visualzation\")\n","\n","blood_sugar_man = [113,85,90,150,149,88,93,115,135,80,77,82,129]\n","blood_sugar_women = [67,98,89,120,133,150,84,69,89,79,120,112,100]\n","\n","plt.hist([mc_chrun_yes,mc_chrun_no],rwidth = 0.95, color = ['green', 'red'], label = ['Chrun = Yes', 'Chrun = No'])\n","plt.legend()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"KWOd3ia0OkV-","executionInfo":{"status":"ok","timestamp":1734633084158,"user_tz":360,"elapsed":214,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"deee3737-b878-4a82-8262-9f917ccd18cb"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7b88fde1d2a0>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["def print_unique_col_values(df):\n","    for column in df:\n","        if df[column].dtypes == 'object':\n","            print(f'{column} : {df[column].unique()}')"],"metadata":{"id":"GlrxFuYnQO7D","executionInfo":{"status":"ok","timestamp":1734633084158,"user_tz":360,"elapsed":7,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["print_unique_col_values(df1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B7sLu3yBVbED","executionInfo":{"status":"ok","timestamp":1734633084346,"user_tz":360,"elapsed":194,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"9769ab4b-5794-45f4-aea1-ef5a6d2fed88"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["customerID : ['7590-VHVEG' '5575-GNVDE' '3668-QPYBK' ... '4801-JZAZL' '8361-LTMKD'\n"," '3186-AJIEK']\n","gender : ['Female' 'Male']\n","Partner : ['Yes' 'No']\n","Dependents : ['No' 'Yes']\n","PhoneService : ['No' 'Yes']\n","MultipleLines : ['No phone service' 'No' 'Yes']\n","InternetService : ['DSL' 'Fiber optic' 'No']\n","OnlineSecurity : ['No' 'Yes' 'No internet service']\n","OnlineBackup : ['Yes' 'No' 'No internet service']\n","DeviceProtection : ['No' 'Yes' 'No internet service']\n","TechSupport : ['No' 'Yes' 'No internet service']\n","StreamingTV : ['No' 'Yes' 'No internet service']\n","StreamingMovies : ['No' 'Yes' 'No internet service']\n","Contract : ['Month-to-month' 'One year' 'Two year']\n","PaperlessBilling : ['Yes' 'No']\n","PaymentMethod : ['Electronic check' 'Mailed check' 'Bank transfer (automatic)'\n"," 'Credit card (automatic)']\n","Churn : ['No' 'Yes']\n"]}]},{"cell_type":"code","source":["df1.replace('No internet service', 'No', inplace = True)\n","df1.replace('No phone service', 'No', inplace = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mbw5LUKhWfLU","executionInfo":{"status":"ok","timestamp":1734633084347,"user_tz":360,"elapsed":16,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"a4df017f-93b0-4b8b-d56c-68e27cdb73d7"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-20-4504976d21a6>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1.replace('No internet service', 'No', inplace = True)\n","<ipython-input-20-4504976d21a6>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1.replace('No phone service', 'No', inplace = True)\n"]}]},{"cell_type":"code","source":["print_unique_col_values(df1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nKMaf8bfXnr1","executionInfo":{"status":"ok","timestamp":1734633084347,"user_tz":360,"elapsed":12,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"db04b374-d65d-4960-ec54-b17c400a61a3"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["customerID : ['7590-VHVEG' '5575-GNVDE' '3668-QPYBK' ... '4801-JZAZL' '8361-LTMKD'\n"," '3186-AJIEK']\n","gender : ['Female' 'Male']\n","Partner : ['Yes' 'No']\n","Dependents : ['No' 'Yes']\n","PhoneService : ['No' 'Yes']\n","MultipleLines : ['No' 'Yes']\n","InternetService : ['DSL' 'Fiber optic' 'No']\n","OnlineSecurity : ['No' 'Yes']\n","OnlineBackup : ['Yes' 'No']\n","DeviceProtection : ['No' 'Yes']\n","TechSupport : ['No' 'Yes']\n","StreamingTV : ['No' 'Yes']\n","StreamingMovies : ['No' 'Yes']\n","Contract : ['Month-to-month' 'One year' 'Two year']\n","PaperlessBilling : ['Yes' 'No']\n","PaymentMethod : ['Electronic check' 'Mailed check' 'Bank transfer (automatic)'\n"," 'Credit card (automatic)']\n","Churn : ['No' 'Yes']\n"]}]},{"cell_type":"code","source":["yes_no_columns = ['Partner', 'Dependents', 'PhoneService', 'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies', 'PaperlessBilling', 'Churn']\n","\n","for col in yes_no_columns:\n","  df1[col].replace({'Yes':1,'No':0},inplace = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"722Df9LHYjFq","executionInfo":{"status":"ok","timestamp":1734633084347,"user_tz":360,"elapsed":9,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"4a9c12a6-c624-4a8a-ea51-729ced046205"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-22-036ec162e26d>:4: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df1[col].replace({'Yes':1,'No':0},inplace = True)\n","<ipython-input-22-036ec162e26d>:4: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n","  df1[col].replace({'Yes':1,'No':0},inplace = True)\n","<ipython-input-22-036ec162e26d>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1[col].replace({'Yes':1,'No':0},inplace = True)\n"]}]},{"cell_type":"code","source":["for col in df1:\n","  print(f'{col}: {df1[col].unique()}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B-tJek1wY5We","executionInfo":{"status":"ok","timestamp":1734633084584,"user_tz":360,"elapsed":243,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"7f7e66aa-16b2-4b3a-bf27-50543c6a1fb0"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["customerID: ['7590-VHVEG' '5575-GNVDE' '3668-QPYBK' ... '4801-JZAZL' '8361-LTMKD'\n"," '3186-AJIEK']\n","gender: ['Female' 'Male']\n","SeniorCitizen: [0 1]\n","Partner: [1 0]\n","Dependents: [0 1]\n","tenure: [ 1 34  2 45  8 22 10 28 62 13 16 58 49 25 69 52 71 21 12 30 47 72 17 27\n","  5 46 11 70 63 43 15 60 18 66  9  3 31 50 64 56  7 42 35 48 29 65 38 68\n"," 32 55 37 36 41  6  4 33 67 23 57 61 14 20 53 40 59 24 44 19 54 51 26 39]\n","PhoneService: [0 1]\n","MultipleLines: ['No' 'Yes']\n","InternetService: ['DSL' 'Fiber optic' 'No']\n","OnlineSecurity: [0 1]\n","OnlineBackup: [1 0]\n","DeviceProtection: [0 1]\n","TechSupport: [0 1]\n","StreamingTV: [0 1]\n","StreamingMovies: [0 1]\n","Contract: ['Month-to-month' 'One year' 'Two year']\n","PaperlessBilling: [1 0]\n","PaymentMethod: ['Electronic check' 'Mailed check' 'Bank transfer (automatic)'\n"," 'Credit card (automatic)']\n","MonthlyCharges: [29.85 56.95 53.85 ... 63.1  44.2  78.7 ]\n","TotalCharges: [  29.85 1889.5   108.15 ...  346.45  306.6  6844.5 ]\n","Churn: [0 1]\n"]}]},{"cell_type":"code","source":["df1['gender'].replace({'Female':1,'Male':0},inplace=True)"],"metadata":{"id":"J3NOuh8mZPMJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1734633084584,"user_tz":360,"elapsed":45,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"df988687-f792-488e-a9b0-a686266839e7"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-24-ba153b6b6960>:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df1['gender'].replace({'Female':1,'Male':0},inplace=True)\n","<ipython-input-24-ba153b6b6960>:1: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n","  df1['gender'].replace({'Female':1,'Male':0},inplace=True)\n","<ipython-input-24-ba153b6b6960>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1['gender'].replace({'Female':1,'Male':0},inplace=True)\n"]}]},{"cell_type":"code","source":["df1.gender.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yOHuMhGqoerm","executionInfo":{"status":"ok","timestamp":1734633084585,"user_tz":360,"elapsed":41,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"ab89d2ee-b72b-41c8-f186-39adce079346"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0])"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# ONE HOT ENCODING\n","\n","df2 = pd.get_dummies(data=df1, columns=['InternetService','Contract','PaymentMethod'])\n","df2.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"258sVS2dohiA","executionInfo":{"status":"ok","timestamp":1734633084585,"user_tz":360,"elapsed":36,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"6898ed22-ad84-4fa3-a251-4d0b551cd180"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['customerID', 'gender', 'SeniorCitizen', 'Partner', 'Dependents',\n","       'tenure', 'PhoneService', 'MultipleLines', 'OnlineSecurity',\n","       'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV',\n","       'StreamingMovies', 'PaperlessBilling', 'MonthlyCharges', 'TotalCharges',\n","       'Churn', 'InternetService_DSL', 'InternetService_Fiber optic',\n","       'InternetService_No', 'Contract_Month-to-month', 'Contract_One year',\n","       'Contract_Two year', 'PaymentMethod_Bank transfer (automatic)',\n","       'PaymentMethod_Credit card (automatic)',\n","       'PaymentMethod_Electronic check', 'PaymentMethod_Mailed check'],\n","      dtype='object')"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["df2.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":962},"id":"PyW_vrtVq_vy","executionInfo":{"status":"ok","timestamp":1734633084585,"user_tz":360,"elapsed":31,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"53cebc6c-f4b3-4c75-9d19-045ceb13167c"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["customerID                                  object\n","gender                                       int64\n","SeniorCitizen                                int64\n","Partner                                      int64\n","Dependents                                   int64\n","tenure                                       int64\n","PhoneService                                 int64\n","MultipleLines                               object\n","OnlineSecurity                               int64\n","OnlineBackup                                 int64\n","DeviceProtection                             int64\n","TechSupport                                  int64\n","StreamingTV                                  int64\n","StreamingMovies                              int64\n","PaperlessBilling                             int64\n","MonthlyCharges                             float64\n","TotalCharges                               float64\n","Churn                                        int64\n","InternetService_DSL                           bool\n","InternetService_Fiber optic                   bool\n","InternetService_No                            bool\n","Contract_Month-to-month                       bool\n","Contract_One year                             bool\n","Contract_Two year                             bool\n","PaymentMethod_Bank transfer (automatic)       bool\n","PaymentMethod_Credit card (automatic)         bool\n","PaymentMethod_Electronic check                bool\n","PaymentMethod_Mailed check                    bool\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>customerID</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>SeniorCitizen</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Partner</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Dependents</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>tenure</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>PhoneService</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>MultipleLines</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>OnlineSecurity</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>OnlineBackup</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>DeviceProtection</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>TechSupport</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>StreamingTV</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>StreamingMovies</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>PaperlessBilling</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>MonthlyCharges</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>TotalCharges</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>InternetService_DSL</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>InternetService_Fiber optic</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>InternetService_No</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>Contract_Month-to-month</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>Contract_One year</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>Contract_Two year</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>PaymentMethod_Bank transfer (automatic)</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>PaymentMethod_Credit card (automatic)</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>PaymentMethod_Electronic check</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>PaymentMethod_Mailed check</th>\n","      <td>bool</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df.drop('customerID', axis = 'columns', inplace = True)"],"metadata":{"id":"qmVtSuPeN_QT","executionInfo":{"status":"ok","timestamp":1734633620897,"user_tz":360,"elapsed":157,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"pdzCen-9OS2V","executionInfo":{"status":"ok","timestamp":1734633671199,"user_tz":360,"elapsed":531,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"794fe2d3-5c76-4fc8-8300-78e3b733617b"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   gender  SeniorCitizen Partner Dependents  tenure PhoneService  \\\n","0  Female              0     Yes         No       1           No   \n","1    Male              0      No         No      34          Yes   \n","2    Male              0      No         No       2          Yes   \n","3    Male              0      No         No      45           No   \n","4  Female              0      No         No       2          Yes   \n","\n","      MultipleLines InternetService OnlineSecurity OnlineBackup  \\\n","0  No phone service             DSL             No          Yes   \n","1                No             DSL            Yes           No   \n","2                No             DSL            Yes          Yes   \n","3  No phone service             DSL            Yes           No   \n","4                No     Fiber optic             No           No   \n","\n","  DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n","0               No          No          No              No  Month-to-month   \n","1              Yes          No          No              No        One year   \n","2               No          No          No              No  Month-to-month   \n","3              Yes         Yes          No              No        One year   \n","4               No          No          No              No  Month-to-month   \n","\n","  PaperlessBilling              PaymentMethod  MonthlyCharges TotalCharges  \\\n","0              Yes           Electronic check           29.85        29.85   \n","1               No               Mailed check           56.95       1889.5   \n","2              Yes               Mailed check           53.85       108.15   \n","3               No  Bank transfer (automatic)           42.30      1840.75   \n","4              Yes           Electronic check           70.70       151.65   \n","\n","  Churn  \n","0    No  \n","1    No  \n","2   Yes  \n","3    No  \n","4   Yes  "],"text/html":["\n","  <div id=\"df-5cd1e0ae-fb2e-42c7-9672-4c8a3116b73a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>29.85</td>\n","      <td>29.85</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>34</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>56.95</td>\n","      <td>1889.5</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>53.85</td>\n","      <td>108.15</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>45</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>42.30</td>\n","      <td>1840.75</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>70.70</td>\n","      <td>151.65</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5cd1e0ae-fb2e-42c7-9672-4c8a3116b73a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5cd1e0ae-fb2e-42c7-9672-4c8a3116b73a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5cd1e0ae-fb2e-42c7-9672-4c8a3116b73a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d545c288-bd4d-42c6-acdc-0888581708b6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d545c288-bd4d-42c6-acdc-0888581708b6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d545c288-bd4d-42c6-acdc-0888581708b6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 7043,\n  \"fields\": [\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SeniorCitizen\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Partner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependents\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 0,\n        \"max\": 72,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          8,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PhoneService\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MultipleLines\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"No phone service\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"InternetService\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"DSL\",\n          \"Fiber optic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OnlineSecurity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OnlineBackup\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DeviceProtection\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TechSupport\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"StreamingTV\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"StreamingMovies\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contract\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Month-to-month\",\n          \"One year\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PaperlessBilling\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PaymentMethod\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Mailed check\",\n          \"Credit card (automatic)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MonthlyCharges\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.09004709767854,\n        \"min\": 18.25,\n        \"max\": 118.75,\n        \"num_unique_values\": 1585,\n        \"samples\": [\n          48.85,\n          20.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TotalCharges\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6531,\n        \"samples\": [\n          \"4600.7\",\n          \"20.35\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Churn\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["df2.drop('customerID', axis = 'columns', inplace = True)"],"metadata":{"id":"UTAGP_BYObye","executionInfo":{"status":"ok","timestamp":1734633737429,"user_tz":360,"elapsed":134,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["cols_to_scale = ['tenure','MonthlyCharges','TotalCharges']\n","\n","from sklearn.preprocessing import MinMaxScaler\n","scaler = MinMaxScaler()\n","df2[cols_to_scale] = scaler.fit_transform(df2[cols_to_scale])"],"metadata":{"id":"dl5lJEHUrBhc","executionInfo":{"status":"ok","timestamp":1734633738218,"user_tz":360,"elapsed":96,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["for col in df2:\n","    print(f'{col}: {df2[col].unique()}')\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oeo-6yoYrJ5K","executionInfo":{"status":"ok","timestamp":1734633739050,"user_tz":360,"elapsed":161,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"abb5e742-7bd7-4c01-a084-01a76fca55f3"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["gender: [1 0]\n","SeniorCitizen: [0 1]\n","Partner: [1 0]\n","Dependents: [0 1]\n","tenure: [0.         0.46478873 0.01408451 0.61971831 0.09859155 0.29577465\n"," 0.12676056 0.38028169 0.85915493 0.16901408 0.21126761 0.8028169\n"," 0.67605634 0.33802817 0.95774648 0.71830986 0.98591549 0.28169014\n"," 0.15492958 0.4084507  0.64788732 1.         0.22535211 0.36619718\n"," 0.05633803 0.63380282 0.14084507 0.97183099 0.87323944 0.5915493\n"," 0.1971831  0.83098592 0.23943662 0.91549296 0.11267606 0.02816901\n"," 0.42253521 0.69014085 0.88732394 0.77464789 0.08450704 0.57746479\n"," 0.47887324 0.66197183 0.3943662  0.90140845 0.52112676 0.94366197\n"," 0.43661972 0.76056338 0.50704225 0.49295775 0.56338028 0.07042254\n"," 0.04225352 0.45070423 0.92957746 0.30985915 0.78873239 0.84507042\n"," 0.18309859 0.26760563 0.73239437 0.54929577 0.81690141 0.32394366\n"," 0.6056338  0.25352113 0.74647887 0.70422535 0.35211268 0.53521127]\n","PhoneService: [0 1]\n","MultipleLines: ['No' 'Yes']\n","OnlineSecurity: [0 1]\n","OnlineBackup: [1 0]\n","DeviceProtection: [0 1]\n","TechSupport: [0 1]\n","StreamingTV: [0 1]\n","StreamingMovies: [0 1]\n","PaperlessBilling: [1 0]\n","MonthlyCharges: [0.11542289 0.38507463 0.35422886 ... 0.44626866 0.25820896 0.60149254]\n","TotalCharges: [0.0012751  0.21586661 0.01031041 ... 0.03780868 0.03321025 0.78764136]\n","Churn: [0 1]\n","InternetService_DSL: [ True False]\n","InternetService_Fiber optic: [False  True]\n","InternetService_No: [False  True]\n","Contract_Month-to-month: [ True False]\n","Contract_One year: [False  True]\n","Contract_Two year: [False  True]\n","PaymentMethod_Bank transfer (automatic): [False  True]\n","PaymentMethod_Credit card (automatic): [False  True]\n","PaymentMethod_Electronic check: [ True False]\n","PaymentMethod_Mailed check: [False  True]\n"]}]},{"cell_type":"code","source":["X = df2.drop('Churn',axis='columns')\n","y = df2['Churn']\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=5)"],"metadata":{"id":"h_sEWWmyrM0z","executionInfo":{"status":"ok","timestamp":1734633740229,"user_tz":360,"elapsed":108,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["\n","X_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TBevsZaKrShe","executionInfo":{"status":"ok","timestamp":1734633740927,"user_tz":360,"elapsed":123,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"a8c33b0e-ad5b-4370-9a5e-72a4292103a1"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5625, 26)"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fPBVeHXurS1U","executionInfo":{"status":"ok","timestamp":1734633741783,"user_tz":360,"elapsed":113,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"b5dc4e58-8d05-4087-fa3a-18de44ec7057"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1407, 26)"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["from tensorflow.keras.utils import to_categorical\n","y_train = to_categorical(y_train)\n"],"metadata":{"id":"IU8bNyFrr-uy","executionInfo":{"status":"ok","timestamp":1734633742527,"user_tz":360,"elapsed":166,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["# BUILDING ANN MODEL\n","\n","import tensorflow as tf\n","from tensorflow import keras\n","\n","\n","model = keras.Sequential([\n","    keras.layers.Dense(26, input_shape=(26,), activation='relu'),\n","    keras.layers.Dense(15, activation='relu'),\n","    # Change the output layer to have 2 neurons and softmax activation\n","    keras.layers.Dense(2, activation='softmax')\n","])\n","\n","# opt = keras.optimizers.Adam(learning_rate=0.01)\n","\n","model.compile(optimizer='adam',\n","              loss='categorical_crossentropy', # Use categorical_crossentropy for multi-class\n","              metrics=['accuracy'])\n","\n","model.fit(X_train, y_train, epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wd52SpcyPanu","executionInfo":{"status":"ok","timestamp":1734634036823,"user_tz":360,"elapsed":43696,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"44daba6d-db0b-4ff0-d663-b231b2dcc13b"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step - accuracy: 0.7149 - loss: 0.5709\n","Epoch 2/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.7857 - loss: 0.4346\n","Epoch 3/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.7965 - loss: 0.4227\n","Epoch 4/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8016 - loss: 0.4248\n","Epoch 5/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.7985 - loss: 0.4025\n","Epoch 6/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8108 - loss: 0.4033\n","Epoch 7/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8080 - loss: 0.4009\n","Epoch 8/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8004 - loss: 0.4162\n","Epoch 9/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8099 - loss: 0.4021\n","Epoch 10/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8101 - loss: 0.4000\n","Epoch 11/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8131 - loss: 0.3882\n","Epoch 12/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8024 - loss: 0.4126\n","Epoch 13/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8235 - loss: 0.3857\n","Epoch 14/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8087 - loss: 0.4047\n","Epoch 15/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8093 - loss: 0.3997\n","Epoch 16/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8138 - loss: 0.3980\n","Epoch 17/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8137 - loss: 0.3998\n","Epoch 18/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.8150 - loss: 0.3915\n","Epoch 19/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.8086 - loss: 0.4060\n","Epoch 20/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8186 - loss: 0.3842\n","Epoch 21/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8120 - loss: 0.4002\n","Epoch 22/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8174 - loss: 0.3913\n","Epoch 23/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8195 - loss: 0.3870\n","Epoch 24/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8294 - loss: 0.3836\n","Epoch 25/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8156 - loss: 0.3804\n","Epoch 26/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8210 - loss: 0.3846\n","Epoch 27/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8186 - loss: 0.3824\n","Epoch 28/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8158 - loss: 0.3864\n","Epoch 29/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8232 - loss: 0.3713\n","Epoch 30/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8112 - loss: 0.3876\n","Epoch 31/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8215 - loss: 0.3811\n","Epoch 32/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8186 - loss: 0.3798\n","Epoch 33/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8254 - loss: 0.3717\n","Epoch 34/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8191 - loss: 0.3838\n","Epoch 35/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8250 - loss: 0.3676\n","Epoch 36/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8309 - loss: 0.3655\n","Epoch 37/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8314 - loss: 0.3659\n","Epoch 38/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8217 - loss: 0.3688\n","Epoch 39/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8195 - loss: 0.3783\n","Epoch 40/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8274 - loss: 0.3715\n","Epoch 41/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8246 - loss: 0.3687\n","Epoch 42/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8244 - loss: 0.3738\n","Epoch 43/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8231 - loss: 0.3718\n","Epoch 44/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8323 - loss: 0.3546\n","Epoch 45/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8291 - loss: 0.3633\n","Epoch 46/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8268 - loss: 0.3646\n","Epoch 47/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8186 - loss: 0.3794\n","Epoch 48/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8187 - loss: 0.3677\n","Epoch 49/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8338 - loss: 0.3623\n","Epoch 50/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.8299 - loss: 0.3620\n","Epoch 51/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8343 - loss: 0.3590\n","Epoch 52/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.8216 - loss: 0.3643\n","Epoch 53/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8347 - loss: 0.3485\n","Epoch 54/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8311 - loss: 0.3546\n","Epoch 55/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8244 - loss: 0.3727\n","Epoch 56/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8368 - loss: 0.3499\n","Epoch 57/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step - accuracy: 0.8263 - loss: 0.3576\n","Epoch 58/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8304 - loss: 0.3558\n","Epoch 59/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8268 - loss: 0.3611\n","Epoch 60/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8223 - loss: 0.3723\n","Epoch 61/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8330 - loss: 0.3530\n","Epoch 62/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8273 - loss: 0.3666\n","Epoch 63/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8261 - loss: 0.3592\n","Epoch 64/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8243 - loss: 0.3650\n","Epoch 65/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8305 - loss: 0.3616\n","Epoch 66/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8345 - loss: 0.3519\n","Epoch 67/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8330 - loss: 0.3467\n","Epoch 68/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8330 - loss: 0.3485\n","Epoch 69/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8288 - loss: 0.3563\n","Epoch 70/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8251 - loss: 0.3596\n","Epoch 71/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8314 - loss: 0.3570\n","Epoch 72/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8319 - loss: 0.3515\n","Epoch 73/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8273 - loss: 0.3585\n","Epoch 74/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8332 - loss: 0.3527\n","Epoch 75/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8431 - loss: 0.3384\n","Epoch 76/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8259 - loss: 0.3581\n","Epoch 77/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8323 - loss: 0.3540\n","Epoch 78/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8292 - loss: 0.3566\n","Epoch 79/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.8344 - loss: 0.3567\n","Epoch 80/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step - accuracy: 0.8326 - loss: 0.3512\n","Epoch 81/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8401 - loss: 0.3381\n","Epoch 82/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8408 - loss: 0.3391\n","Epoch 83/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8380 - loss: 0.3427\n","Epoch 84/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8339 - loss: 0.3472\n","Epoch 85/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8490 - loss: 0.3271\n","Epoch 86/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8354 - loss: 0.3422\n","Epoch 87/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8331 - loss: 0.3370\n","Epoch 88/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8387 - loss: 0.3405\n","Epoch 89/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8372 - loss: 0.3464\n","Epoch 90/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8361 - loss: 0.3431\n","Epoch 91/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8421 - loss: 0.3342\n","Epoch 92/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8414 - loss: 0.3416\n","Epoch 93/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8448 - loss: 0.3376\n","Epoch 94/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8455 - loss: 0.3353\n","Epoch 95/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8344 - loss: 0.3457\n","Epoch 96/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8374 - loss: 0.3404\n","Epoch 97/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8462 - loss: 0.3323\n","Epoch 98/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8371 - loss: 0.3356\n","Epoch 99/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8407 - loss: 0.3379\n","Epoch 100/100\n","\u001b[1m176/176\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.8473 - loss: 0.3345\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.history.History at 0x7b88f8c163b0>"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["from tensorflow.keras.utils import to_categorical\n","\n","# ... (your existing code) ...\n","\n","# Before model.evaluate, one-hot encode y_test\n","y_test = to_categorical(y_test)\n","\n","model.evaluate(X_test, y_test)"],"metadata":{"id":"oyST3gwfrUL6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1734634083912,"user_tz":360,"elapsed":564,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"560d3f49-8d40-41c9-b56f-42fff1f0d730"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7912 - loss: 0.4963\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.5105462074279785, 0.7768301367759705]"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["yp = model.predict(X_test)\n","yp[:5]"],"metadata":{"id":"7AL2-5Q3rUCf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1734634090087,"user_tz":360,"elapsed":519,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"9e5c7807-f62c-4ed4-fe96-32578faaa4d6"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[0.45170912, 0.54829097],\n","       [0.5535152 , 0.44648474],\n","       [0.9985197 , 0.0014802 ],\n","       [0.10683835, 0.8931616 ],\n","       [0.43439806, 0.56560194]], dtype=float32)"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["y_pred = []\n","for element in yp:\n","    if element[1] > 0.5:  # Check the probability of the second class (index 1)\n","        y_pred.append(1)\n","    else:\n","        y_pred.append(0)"],"metadata":{"id":"2Rno_LDzrT5V","executionInfo":{"status":"ok","timestamp":1734634127342,"user_tz":360,"elapsed":122,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["y_pred[:10]"],"metadata":{"id":"1UZnLAYLrTwu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1734634130212,"user_tz":360,"elapsed":108,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"90c55aca-5185-4335-b292-9f081d620edf"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 0, 0, 1, 1, 1, 0, 0, 0, 0]"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["y_test[:10]"],"metadata":{"id":"QDf9L97OsXl3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1734634131916,"user_tz":360,"elapsed":141,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"f38f06c9-2d56-4cda-c0de-4c30b2bf31a1"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0.],\n","       [1., 0.],\n","       [0., 1.],\n","       [0., 1.],\n","       [0., 1.],\n","       [0., 1.],\n","       [1., 0.],\n","       [1., 0.],\n","       [1., 0.],\n","       [1., 0.]])"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["# ... (your existing code) ...\n","\n","# After model.predict, convert predictions to binary format\n","yp = model.predict(X_test)\n","y_pred = (yp[:, 1] > 0.5).astype(int)  # Assuming class 1 is the positive class\n","\n","# Convert y_test back to binary from one-hot encoded format\n","# if you used to_categorical earlier\n","y_test = np.argmax(y_test, axis=1)\n","\n","print(classification_report(y_test, y_pred))\n","\n","# ... (rest of your code) ..."],"metadata":{"id":"gX4gNvu2sXjA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1734634165615,"user_tz":360,"elapsed":508,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"9a132e96-f008-47d2-c527-1127f50c3d3e"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step\n","              precision    recall  f1-score   support\n","\n","           0       0.82      0.88      0.85       999\n","           1       0.64      0.52      0.57       408\n","\n","    accuracy                           0.78      1407\n","   macro avg       0.73      0.70      0.71      1407\n","weighted avg       0.77      0.78      0.77      1407\n","\n"]}]},{"cell_type":"code","source":["import seaborn as sn\n","cm = tf.math.confusion_matrix(labels=y_test,predictions=y_pred)\n","\n","plt.figure(figsize = (10,7))\n","sn.heatmap(cm, annot=True, fmt='d')\n","plt.xlabel('Predicted')\n","plt.ylabel('Truth')"],"metadata":{"id":"6c_6l6xosXSm","colab":{"base_uri":"https://localhost:8080/","height":636},"executionInfo":{"status":"ok","timestamp":1734634173627,"user_tz":360,"elapsed":840,"user":{"displayName":"Kalluru Bhavesh","userId":"08631431376885713755"}},"outputId":"b0588a90-4c02-451f-d351-ff74790dab23"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(95.72222222222221, 0.5, 'Truth')"]},"metadata":{},"execution_count":74},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}